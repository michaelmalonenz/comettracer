class Vector3D {
    init(x=0.0, y=0.0, z=0.0) {
        self.x = x
        self.y = y
        self.z = z
    }

    cross(rhs) {
        return Vector3D(
            (self.y * rhs.z) - (self.z * rhs.y),
            (self.z * rhs.x) - (self.x * rhs.z),
            (self.x * rhs.y) - (self.y * rhs.x))
    }

    dot(rhs) {
        return (self.x * rhs.x) + (self.y * rhs.y) + (self.z * rhs.z)
    }

    normalize() {
        var length = self.length()
        return Vector3D(
            self.x * length,
		    self.y * length,
		    self.z * length)
    }

    length() {
        return (self.x*self.x + self.y*self.y + self.z*self.z).square_root()
    }
}