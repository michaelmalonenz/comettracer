import 'shape' as shape
import 'vector3D' as vector
import 'intersection' as intersection

class Triangle : shape.Shape {
    init(objHash) {
        super.init(objHash)
        self.normal = vector.Vector3D(
            objHash['normal']['x'],
            objHash['normal']['y'],
            objHash['normal']['z']).normalise()
    }

    intersect(ray) {
        var denominator = self.normal.dot(ray.direction)
        if (denominator.absolute_value() > vector.EPSILON) {
            var t = (self.center - ray.position).dot(self.normal) / denominator
            if (t >= vector.EPSILON) {
                return intersection.Intersection(t, ray.position * t, self.normal, self)
            }
        }
        return nil
    }

    scatter(incident, collision) {
        return self.material.scatter(incident, collision)
    }
}